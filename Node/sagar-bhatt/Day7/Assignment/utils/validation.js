const Joi = require("joi");

const validateEmployee = (employee) => {
  const joiSchema = Joi.object({
    AddressLine1: Joi.string(),
    AddressLine2: Joi.string(),
    AddressLine3: Joi.string(),
    assignments: Joi.array().items(
      Joi.object({
        ActionCode: Joi.string(),
        ActionReasonCode: Joi.string(),
        ActualTerminationDate: Joi.string(),
        AssignmentCategory: Joi.string(),
        assignmentDFF: Joi.array().items(Joi.string()),
        assignmentExtraInformation: Joi.array().items(Joi.string()),
        AssignmentId: Joi.number(),
        AssignmentName: Joi.string(),
        AssignmentNumber: Joi.string(),
        AssignmentProjectedEndDate: Joi.string(),
        AssignmentStatus: Joi.string(),
        AssignmentStatusTypeId: Joi.number(),
        BusinessUnitId: Joi.number(),
        CreationDate: Joi.string(),
        DefaultExpenseAccount: Joi.string(),
        DepartmentId: Joi.number(),
        EffectiveEndDate: Joi.string(),
        EffectiveStartDate: Joi.string(),
        empreps: Joi.array().items(Joi.string()),
        EndTime: Joi.string(),
        Frequency: Joi.string(),
        FullPartTime: Joi.string(),
        GradeId: Joi.number(),
        GradeLadderId: Joi.number(),
        JobId: Joi.number(),
        LastUpdateDate: Joi.string(),
        LegalEntityId: Joi.number(),
        links: Joi.array().items(Joi.string()),
        LocationId: Joi.number(),
        ManagerAssignmentId: Joi.number(),
        ManagerId: Joi.number(),
      })
    ),
    CitizenshipId: Joi.number(),
    CitizenshipLegislationCode: Joi.string(),
    CitizenshipStatus: Joi.string(),
    CitizenshipToDate: Joi.string(),
    City: Joi.string(),
    CorrespondenceLanguage: Joi.string(),
    Country: Joi.string(),
    CreationDate: Joi.string(),
    DateOfBirth: Joi.string(),
    directReports: Joi.array().items(Joi.string()),
    DisplayName: Joi.string(),
    DriversLicenseExpirationDate: Joi.string(),
    DriversLicenseId: Joi.number(),
    DriversLicenseIssuingCountry: Joi.string(),
    EffectiveStartDate: Joi.string(),
    Ethnicity: Joi.string(),
    EmployeeId: Joi.number(),
    FirstName: Joi.string(),
    Gender: Joi.string(),
    HireDate: Joi.string(),
    HomeFaxAreaCode: Joi.string(),
    HomeFaxCountryCode: Joi.string(),
    HomeFaxExtension: Joi.string(),
    HomeFaxLegislationCode: Joi.string(),
    HomeFaxNumber: Joi.string(),
    HomePhoneAreaCode: Joi.string(),
    HomePhoneCountryCode: Joi.string(),
    HomePhoneExtension: Joi.string(),
    HomePhoneLegislationCode: Joi.string(),
    HomePhoneNumber: Joi.string(),
    Honors: Joi.string(),
    LastName: Joi.string(),
    LastUpdateDate: Joi.string(),
    LegalEntityId: Joi.number(),
    LicenseNumber: Joi.string(),
    links: Joi.array().items(Joi.string()),
    MaritalStatus: Joi.string(),
    MiddleName: Joi.string(),
    MilitaryVetStatus: Joi.string(),
    NameSuffix: Joi.string(),
    NationalId: Joi.string(),
    NationalIdCountry: Joi.string(),
  });
  return joiSchema.validate(employee);
};

const validateAssignment = (assignment) => {
  const joiSchema = Joi.object({
    ActionCode: Joi.string(),
    ActionReasonCode: Joi.string(),
    ActualTerminationDate: Joi.string(),
    AssignmentCategory: Joi.string(),
    assignmentDFF: Joi.array().items(Joi.string()),
    assignmentExtraInformation: Joi.array().items(Joi.string()),
    AssignmentId: Joi.number(),
    AssignmentName: Joi.string(),
    AssignmentNumber: Joi.string(),
    AssignmentProjectedEndDate: Joi.string(),
    AssignmentStatus: Joi.string(),
    AssignmentStatusTypeId: Joi.number(),
    BusinessUnitId: Joi.number(),
    CreationDate: Joi.string(),
    DefaultExpenseAccount: Joi.string(),
    DepartmentId: Joi.number(),
    EffectiveEndDate: Joi.string(),
    EffectiveStartDate: Joi.string(),
    empreps: Joi.array().items(Joi.string()),
    EndTime: Joi.string(),
    Frequency: Joi.string(),
    FullPartTime: Joi.string(),
    GradeId: Joi.number(),
    GradeLadderId: Joi.number(),
    JobId: Joi.number(),
    LastUpdateDate: Joi.string(),
    LegalEntityId: Joi.number(),
    links: Joi.array().items(Joi.string()),
    LocationId: Joi.number(),
    ManagerAssignmentId: Joi.number(),
    ManagerId: Joi.number(),
  });
  return joiSchema.validate(assignment);
};
module.exports = { validateEmployee, validateAssignment };
